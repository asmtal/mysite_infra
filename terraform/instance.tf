data "aws_ami" "ubuntu" {
  most_recent = true

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["099720109477"] # Canonical
}

#data "local_file" "key" {
#    filename = "${var.ssh_key_path}"
#}
#
#resource "aws_key_pair" "mysite_key" {
#  key_name   = "deployer-key"
#  public_key = data.local_file.key.content
#}

#data "template_file" "user_data" {
#  template = file("${path.module}/user_data.sh")
#}

resource "aws_instance" "mysite_instance" {
  ami                  = data.aws_ami.ubuntu.id
  instance_type        = "t2.nano"
#  key_name             = aws_key_pair.mysite_key.key_name
  iam_instance_profile = aws_iam_instance_profile.ssm_profile.id
  #  user_data = data.template_file.user_data
  user_data = <<EOF 
#!/bin/bash
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
# Install docker
apt-get update
apt-get install -y cloud-utils apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
apt-get update
apt-get install -y docker-ce
usermod -aG docker ubuntu

mkdir /usr/local/mysite
# Install docker-compose
curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

# Pull django code
cd /usr/local
mkdir /usr/local/mysite
#sudo git clone https://github.com/vvmirkovic/mysite.git
curl -sO https://github.com/vvmirkovic/mysite.git -o /usr/local/mysite
EOF

  tags = {
    Name = "mysite instance"
  }
}

## Save public IP adress into ansible vars file
#resource "local_file" "tf_ansible_vars_instance_ip" {
#  content = <<-DOC
#    # Ansible vars_file containing variable values from Terraform.
#    # Generated by Terraform mgmt configuration.
#
#    tf_mysite_instance_ip: ${aws_instance.mysite_instance.public_ip}
#    DOC
#  filename = "../ansible/tf_ansible_vars_file.yml"
#}
